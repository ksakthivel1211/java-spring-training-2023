openapi: 3.0.3
info:
  title: Gate-kepper application
  description: This application is used as a interface for allowing residents and visitors to be allowed inside a appartment.
  version: 1.0.11
servers:
  - url: /gate-keeping
tags:
  - name: Admin
    description: Admin operations are carried out here
  - name: Registration
    description: User requesting for registration
  - name: Authentication
  - name: login
    description: resident, gatekeeper and admin login endpoint which generates token
  - name: Resident
    description: Resident operations are carried out here
  - name: Gate keeper
    description: Gate Keeper operations are carried out here
paths:
  /admin/request:
    get:
      tags:
        - Admin
      description: view all the existing registration request
      operationId: viewRequest
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-response'
        '400':
          description: Invalid status value

  /admin/approve-request:
    post:
      tags:
        - Admin
      description: Approving users registration request
      operationId: approveRequest
      parameters:
        - name: requestId
          in: query
          description: Its the id related to the registration request
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /admin/reject-request:
    post:
      tags:
        - Admin
      description: Rejecting users registration request
      operationId: rejectRequest
      parameters:
        - name: requestId
          in: query
          description: Its the id related to the registration request
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /admin/resident:
    delete:
      tags:
        - Admin
      description: Deleting resident details
      operationId: deleteResident
      parameters:
        - name: requestId
          in: query
          description: Its the id related to the user(resident)
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

    put:
      tags:
        - Admin
      description: Update resident details
      operationId: updateResident

      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-response'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /registration:
    post:
      tags:
        - Registration
      description: Submitting request for user registration
      operationId: registrationRequest
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-response'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /login:
    post:
      tags:
        - Authentication
      description: Endpoint for authenticating user details
      operationId: authenticate
      requestBody:
        description: user mail and password for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication-request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication-response'
        '405':
          description: Invalid input

  /resident/visitor-slot:
    post:
      tags:
        - Resident
      description: Endpoint for adding a visitor slot for that resident
      operationId: bookVisitorSlot
      requestBody:
        description: Visitor slot object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visitor-slot-request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

    delete:
      tags:
        - Resident
      description: Endpoint for removing a visitor slot for that resident
      operationId: removeVisitorSlot
      parameters:
        - name: requestId
          in: query
          description: The id related to the slot
          schema:
            type: integer

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /resident/black-list:
    post:
      tags:
        - Resident
      description: Endpoint for black listing a visitor or a gate keeper
      operationId: residentBlackList
      requestBody:
        description: Black list object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Black-list-request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /gate-keeper/approval-list:
    get:
      tags:
        - Gate keeper
      description: view all the existing registration request
      operationId: viewApprovalList
      parameters:
        - name: date
          in: query
          description: Date input to get all the visitor approval of that day
          schema:
            type: string
            format: date
            example: '2022-07-01'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval-response'
        '400':
          description: Invalid status value



  /gate-keeper/black-lists:
    post:
      tags:
        - Gate keeper
      description: Endpoint for black listing a visitor
      operationId: gateKeeperBlackList
      requestBody:
        description: Black list object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Black-list-request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

  /gate-keeper/slot-approval:
    post:
      tags:
        - Gate keeper
      description: Endpoint for approving or rejecting users visitor slot
      operationId: slotApproval
      requestBody:
        description: Slot request object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot-approval-request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller-response'
        '405':
          description: Invalid input

components:
  schemas:

    User-response:
      type: object
      properties:
        name:
          type: string
          example: sakthi
        age:
          type: integer
          format: int32
          example: 10
        gender:
          type: string
          example: male
        password:
          type: string
          example: abc123
        mail:
          type: string
          example: sakthi@gmail.com
        roleName:
          type: string
          example: resident

    Registration-response:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        status:
          type: string
          example: notApproved
        name:
          type: string
          example: sakthi
        age:
          type: integer
          format: int32
          example: 10
        gender:
          type: string
          example: male
        password:
          type: string
          example: abc123
        mail:
          type: string
          example: sakthi@gmail.com
        roleName:
          type: string
          example: resident

    Visitor-slot-request:
      type: object
      properties:
        visitorName:
          type: string
          example: ram
        date:
          type: string
          format: date
          example: '2022-07-01'
        inTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        outTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        userId:
          type: integer
          format: int32
          example: 9

    Black-list-request:
      type: object
      properties:
        name:
          type: string
          example: sam
        mail:
          type: string
          example: sam@gmail.com
        userId:
          type: integer
          format: int32
          example: 9

    Slot-approval-request:
      type: object
      properties:
        approvalStatus:
          type: string
          example: approved
        slotId:
          type: integer
          format: int32
          example: 9


    Controller-response:
      type: object
      properties:
        message:
          type: string
          example: processSuccess

    Authentication-response:
      type: object
      properties:
        mail:
          type: string
        userName:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string

    Authentication-request:
      type: object
      properties:
        mail:
          type: string
          example: sakthivel@gmail.com
        password:
          type: string
          example: abc123

    Approval-response:
      type: object
      properties:
        slotId:
          type: integer
          format: int32
          example: 9
        visitorName:
          type: string
          example: ram
        date:
          type: string
          format: date
          example: '2022-07-01'
        inTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        outTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        user:
          $ref: '#/components/schemas/User-response'